<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:behaviors="clr-namespace:Plugin.Maui.Chat.Behaviors"
             xmlns:controls="clr-namespace:Plugin.Maui.Chat.Controls"
             xmlns:helpers="clr-namespace:Plugin.Maui.Chat.Helpers"
             xmlns:models="clr-namespace:Plugin.Maui.Chat.Models"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="Plugin.Maui.Chat.Controls.Chat"
             x:DataType="controls:Chat"
             x:Name="chat">

    <ContentView.Behaviors>
        <behaviors:UserMessageValidationBehavior/>
    </ContentView.Behaviors>

    <ContentView.Resources>
        
        <DataTemplate x:Key="SentMessageTemplate" 
                      x:DataType="models:ChatMessage">
            
            <Grid ColumnDefinitions="*, 3*"
                  Margin="0, 0,15, 0">
                
                <Frame Grid.Column="1"
                       HorizontalOptions="End"
                       CornerRadius="25"
                       Margin="0,0,5,0"
                       Padding="16, 12"
                       BackgroundColor="{Binding SentMessageBackgroundColor, Source={x:Reference chat}}">
                    
                    <VerticalStackLayout>
                        
                        <Label HorizontalOptions="Start"
                               Text="{Binding Author}"
                               TextColor="{Binding SentMessageAuthorTextColor, Source={x:Reference chat}}"
                               FontAttributes="Bold"
                               IsVisible="{Binding IsSentMessageAuthorVisible, Source={x:Reference chat}}"/>
                        
                        <controls:AudioPlayer AudioService="{Binding AudioService, Source={x:Reference chat}}"
                                              Source="{Binding AudioContent}"
                                              StartStopCommand="{Binding AudioPlayerCommand, Source={x:Reference chat}}"
                                              Icon="{Binding AudioContentIcon, Source={x:Reference chat}}"
                                              Color="{Binding SentMessageAudioContentColor, Source={x:Reference chat}}"
                                              HeightRequest="25"
                                              WidthRequest="25"
                                              HorizontalOptions="Start"
                                              Margin="0, 5"/>

                        <Label Text="{Binding TextContent}"
                               TextColor="{Binding SentMessageContentTextColor, Source={x:Reference chat}}">
                            <Label.Behaviors>
                                <behaviors:EmpyLabelVisibilityBehavior/>
                            </Label.Behaviors>
                        </Label>
                        
                        <Label HorizontalOptions="End"
                               Text="{Binding DateTime, StringFormat='{0:HH:mm}'}" 
                               FontSize="Micro"
                               TextColor="{Binding SentMessageTimestampTextColor, Source={x:Reference chat}}"
                               IsVisible="{Binding IsSentMessageTimestampVisible, Source={x:Reference chat}}"/>
                        
                    </VerticalStackLayout>
                </Frame>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="ReceivedMessageTemplate"
                      x:DataType="models:ChatMessage">
            
            <Grid ColumnDefinitions="3*, *"
                  Margin="0,0,0, 0">
                
                <Frame Grid.Column="0"
                       HorizontalOptions="Start"
                       CornerRadius="25"
                       Margin="5,0,5,0"
                       Padding="16, 12"
                       BackgroundColor="{Binding ReceivedMessageBackgroundColor, Source={x:Reference chat}}">
                    
                    <VerticalStackLayout>
                        
                        <Label HorizontalOptions="Start"
                               Text="{Binding Author}"
                               TextColor="{Binding ReceivedMessageAuthorTextColor, Source={x:Reference chat}}"
                               FontAttributes="Bold"
                               IsVisible="{Binding IsReceivedMessageAuthorVisible, Source={x:Reference chat}}"/>

                        <controls:AudioPlayer AudioService="{Binding AudioService, Source={x:Reference chat}}"
                                              Source="{Binding AudioContent}"
                                              StartStopCommand="{Binding AudioPlayerCommand, Source={x:Reference chat}}"
                                              Icon="{Binding AudioContentIcon, Source={x:Reference chat}}"
                                              Color="{Binding ReceivedMessageAudioContentColor, Source={x:Reference chat}}"
                                              HeightRequest="25"
                                              WidthRequest="25"
                                              HorizontalOptions="Start"
                                              Margin="0, 5"/>

                        <Label Text="{Binding TextContent}"
                               TextColor="{Binding ReceivedMessageContentTextColor, Source={x:Reference chat}}">
                            <Label.Behaviors>
                                <behaviors:EmpyLabelVisibilityBehavior/>
                            </Label.Behaviors>
                        </Label>

                        <Label HorizontalOptions="End"
                               Text="{Binding DateTime, StringFormat='{0:HH:mm}'}" 
                               FontSize="Micro"
                               TextColor="{Binding ReceivedMessageTimestampTextColor, Source={x:Reference chat}}"
                               IsVisible="{Binding IsReceivedMessageTimestampVisible, Source={x:Reference chat}}"/>
                        
                    </VerticalStackLayout>
                </Frame>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="SystemMessageTemplate"
                      x:DataType="models:ChatMessage">
            
            <Frame HorizontalOptions="Center"
                   CornerRadius="5"
                   Padding="16, 6"
                   BackgroundColor="{Binding SystemMessageBackgroundColor, Source={x:Reference chat}}"
                   Margin="5,15,5,15">

                <Label Text="{Binding TextContent}"
                       TextColor="{Binding SystemMessageTextColor, Source={x:Reference chat}}"/>
                
            </Frame>
        </DataTemplate>

        <helpers:ChatMessageTemplateSelector x:Key="ChatMessageTemplateSelector"
                                             SentMessage="{StaticResource SentMessageTemplate}"
                                             ReceivedMessage="{StaticResource ReceivedMessageTemplate}"
                                             SystemMessage="{StaticResource SystemMessageTemplate}"/>
    </ContentView.Resources>
    
    <!-- UI -->
    <Grid x:Name="mainGridLayout" RowDefinitions="*, Auto, Auto"
          RowSpacing="10">
        <controls:CustomCollectionView x:Name="chatMessagesCollectionView"
                                Grid.Row="0"
                                VerticalOptions="End"
                                ItemsUpdatingScrollMode="{OnPlatform Default=KeepLastItemInView, WinUI=KeepScrollOffset}"
                                ItemsSource="{Binding ChatMessages, Source={x:Reference chat}}"
                                ItemTemplate="{StaticResource ChatMessageTemplateSelector}">
                <CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Vertical" ItemSpacing="{OnPlatform Android=10, iOS=10, Default=10}" />
                </CollectionView.ItemsLayout>
        </controls:CustomCollectionView>
        
        <Label Grid.Row="1"
               Text="{Binding Status, Source={x:Reference chat}}"
               IsVisible="{Binding IsStatusVisible, Source={x:Reference chat}}"
               TextColor="{Binding StatusTextColor, Source={x:Reference chat}}"
               Margin="0, -10, 0, -5">
        </Label>

        <Grid Grid.Row="2"
              ColumnDefinitions="*, Auto"
              ColumnSpacing="10">

            <Frame Grid.Column="0"
                   Padding="5, 0, 10, 0"
                   BorderColor="LightGray">

                <Grid ColumnDefinitions="*, Auto, Auto, Auto, Auto" 
                      RowDefinitions="Auto, Auto">
				<controls:AudioPlayer Grid.ColumnSpan="5" x:Name="audioPlayer"
                                          Grid.Row="0"
                                          AudioService="{Binding AudioService, Source={x:Reference chat}}"
                                          Source="{Binding AudioContent, Source={x:Reference chat}}"
                                          StartStopCommand="{Binding AudioPlayerCommand, Source={x:Reference chat}}"
                                          Icon="{Binding AudioContentIcon, Source={x:Reference chat}}"
                                          Color="{Binding AudioContentColor, Source={x:Reference chat}}"
                                          HeightRequest="25"
                                          WidthRequest="25"
                                          HorizontalOptions="Start"
                                          Margin="5, 10, 0, 0"/>
                    <Editor Grid.Column="0"
                            Grid.Row="1"
                            Text="{Binding TextContent, Source={x:Reference chat}}"
                            Placeholder="Type your message..."
                            VerticalTextAlignment="Center"
                            Keyboard="Chat"
                            AutoSize="TextChanges"
                            TextColor="{Binding EditorTextColor, Source={x:Reference chat}}"/>

                    <ImageButton Grid.Column="1"
                                 Grid.Row="1"
                                 Command="{Binding AudioRecorderCommand, Source={x:Reference chat}}"
                                 Source="{Binding AudioRecorderIcon, Source={x:Reference chat}}" 
                                 Aspect="AspectFit"
                                 HeightRequest="25"
                                 WidthRequest="25"
                                 IsVisible="{Binding IsAudioRecorderVisible, Source={x:Reference chat}}"
                                 Margin="5, 0, 0, 0">
                        <ImageButton.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding AudioRecorderColor, Source={x:Reference chat}}"/>
                        </ImageButton.Behaviors>
                    </ImageButton>

                    <Image Grid.Column="2"
                           Grid.Row="1"
                           HeightRequest="25"
                           WidthRequest="25"
                           Source="{Binding HandsFreeModeIcon, Source={x:Reference chat}}" 
                           Aspect="AspectFit"
                           IsVisible="{Binding IsHandsFreeModeVisible, Source={x:Reference chat}}"
                           Margin="5, 0, 0, 0">
                        <Image.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding HandsFreeModeColor, Source={x:Reference chat}}"/>
                            <toolkit:ImageTouchBehavior Command="{Binding HandsFreeModeCommand, Source={x:Reference chat}}"/>
                        </Image.Behaviors>
                    </Image>

                    <Image Grid.Column="3"
                           Grid.Row="1"
                           HeightRequest="25"
                           WidthRequest="25"
                           Source="{Binding AddAttachmentIcon, Source={x:Reference chat}}" 
                           Aspect="AspectFit"
                           IsVisible="{Binding IsAddAttachmentVisible, Source={x:Reference chat}}"
                           Margin="5, 0, 0, 0">
                        <Image.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding AddAttachmentColor, Source={x:Reference chat}}"/>
                            <toolkit:ImageTouchBehavior Command="{Binding AddAttachmentCommand, Source={x:Reference chat}}"/>
                        </Image.Behaviors>
                    </Image>

                    <Image Grid.Column="4"
                           Grid.Row="1"
                           HeightRequest="25"
                           WidthRequest="25"
                           Source="{Binding TakePhotoIcon, Source={x:Reference chat}}" 
                           Aspect="AspectFit"
                           IsVisible="{Binding IsTakePhotoVisible, Source={x:Reference chat}}"
                           Margin="5, 0, 0, 0">
                        <Image.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding TakePhotoColor, Source={x:Reference chat}}"/>
                            <toolkit:ImageTouchBehavior Command="{Binding TakePhotoCommand, Source={x:Reference chat}}"/>
                        </Image.Behaviors>
                    </Image>
                </Grid>
            </Frame>

            <ImageButton Grid.Column="1"
                   Command="{Binding SendMessageCommand, Source={x:Reference chat}}"
                         IsEnabled="{Binding IsSendMessageEnabled, Source={x:Reference chat}}"
                   Padding="{OnPlatform iOS=5, Default=0}"
                         Source="{Binding SendMessageIcon, Source={x:Reference chat}}"
                   Aspect="{OnPlatform iOS=Fill, Default=AspectFit}"
                         HeightRequest="25"
                         WidthRequest="25"
                         VerticalOptions="End"
                         Margin="0, 11"
                         IsVisible="{Binding IsSendMessageVisible, Source={x:Reference chat}}">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{Binding SendMessageColor, Source={x:Reference chat}}"/>
                </ImageButton.Behaviors>
            </ImageButton>
        </Grid>
    </Grid>
</ContentView>
