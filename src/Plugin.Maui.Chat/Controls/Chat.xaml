<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:behaviors="clr-namespace:Plugin.Maui.Chat.Behaviors"
             xmlns:converters="clr-namespace:Plugin.Maui.Chat.Converters"
             xmlns:controls="clr-namespace:Plugin.Maui.Chat.Controls"
             xmlns:helpers="clr-namespace:Plugin.Maui.Chat.Helpers"
             xmlns:models="clr-namespace:Plugin.Maui.Chat.Models"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="Plugin.Maui.Chat.Controls.Chat"
             x:DataType="controls:Chat"
             x:Name="chat">

    <ContentView.Behaviors>
        <behaviors:SendMessageButtonEnableBehavior/>
    </ContentView.Behaviors>

    <ContentView.Resources>

        <DataTemplate x:Key="SentMessageTemplate" 
                      x:DataType="models:ChatMessage">

            <Grid ColumnDefinitions="*, 3*"
                  Margin="0, 5">

                <Frame Grid.Column="1"
                       HorizontalOptions="End"
                       CornerRadius="25"
                       Padding="16, 12"
                       BackgroundColor="{Binding SentMessageBackgroundColor, Source={x:Reference chat}}">

                    <VerticalStackLayout>

                        <Label HorizontalOptions="Start"
                               Text="{Binding Author}"
                               TextColor="{Binding SentMessageAuthorTextColor, Source={x:Reference chat}}"
                               FontAttributes="Bold"
                               IsVisible="{Binding IsSentMessageAuthorVisible, Source={x:Reference chat}}"/>

                        <controls:AudioPlayer AudioService="{Binding AudioService, Source={x:Reference chat}}"
                                              Source="{Binding AudioContent}"
                                              StartStopCommand="{Binding AudioPlayerCommand, Source={x:Reference chat}}"
                                              IsEnabled="{Binding IsHandsFreeModeOn, Source={x:Reference chat}, Converter={x:StaticResource Key=InverseBooleanConverter}}"
                                              Icon="{Binding AudioContentIcon, Source={x:Reference chat}}"
                                              Color="{Binding SentMessageAudioContentColor, Source={x:Reference chat}}"
                                              HeightRequest="25"
                                              WidthRequest="25"
                                              HorizontalOptions="Start"
                                              Margin="0, 5"/>

                        <Label Text="{Binding TextContent}"
                               TextColor="{Binding SentMessageContentTextColor, Source={x:Reference chat}}">
                            <Label.Behaviors>
                                <behaviors:EmptyLabelVisibilityBehavior/>
                            </Label.Behaviors>
                        </Label>

                        <Label HorizontalOptions="End"
                               Text="{Binding DateTime, StringFormat='{0:HH:mm}'}" 
                               FontSize="Micro"
                               TextColor="{Binding SentMessageTimestampTextColor, Source={x:Reference chat}}"
                               IsVisible="{Binding IsSentMessageTimestampVisible, Source={x:Reference chat}}"/>

                    </VerticalStackLayout>
                </Frame>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ReceivedMessageTemplate"
                      x:DataType="models:ChatMessage">

            <Grid ColumnDefinitions="3*, *"
                  Margin="0, 5">

                <Frame Grid.Column="0"
                       HorizontalOptions="Start"
                       CornerRadius="25"
                       Padding="16, 12"
                       BackgroundColor="{Binding ReceivedMessageBackgroundColor, Source={x:Reference chat}}">

                    <VerticalStackLayout>

                        <Grid ColumnDefinitions="*, Auto"
                              RowSpacing="5">

                            <Label HorizontalOptions="Start"
                                   Text="{Binding Author}"
                                   TextColor="{Binding ReceivedMessageAuthorTextColor, Source={x:Reference chat}}"
                                   FontAttributes="Bold"
                                   IsVisible="{Binding IsReceivedMessageAuthorVisible, Source={x:Reference chat}}"/>

                            <controls:TextReader TextToSpeechService="{Binding TextToSpeechService, Source={x:Reference chat}}" 
                                                 Source="{Binding TextContent}"
                                                 StartStopCommand="{Binding TextReaderCommand, Source={x:Reference chat}}"
                                                 IsEnabled="{Binding IsHandsFreeModeOn, Source={x:Reference chat}, Converter={x:StaticResource Key=InverseBooleanConverter}}"
                                                 Icon="{Binding TextReaderIcon, Source={x:Reference chat}}"
                                                 Color="{Binding TextReaderColor, Source={x:Reference chat}}"
                                                 HeightRequest="15"
                                                 WidthRequest="15"
                                                 HorizontalOptions="End"
                                                 IsVisible="{Binding IsTextReaderVisible, Source={x:Reference chat}}"/>

                        </Grid>

                        <controls:AudioPlayer AudioService="{Binding AudioService, Source={x:Reference chat}}"
                                              Source="{Binding AudioContent}"
                                              StartStopCommand="{Binding AudioPlayerCommand, Source={x:Reference chat}}"
                                              IsEnabled="{Binding IsHandsFreeModeOn, Source={x:Reference chat}, Converter={x:StaticResource Key=InverseBooleanConverter}}"
                                              Icon="{Binding AudioContentIcon, Source={x:Reference chat}}"
                                              Color="{Binding ReceivedMessageAudioContentColor, Source={x:Reference chat}}"
                                              HeightRequest="25"
                                              WidthRequest="25"
                                              HorizontalOptions="Start"
                                              Margin="0, 5"/>

                        <Label Text="{Binding TextContent}"
                               TextColor="{Binding ReceivedMessageContentTextColor, Source={x:Reference chat}}">
                            <Label.Behaviors>
                                <behaviors:EmptyLabelVisibilityBehavior/>
                            </Label.Behaviors>
                        </Label>

                        <Label HorizontalOptions="End"
                                Text="{Binding DateTime, StringFormat='{0:HH:mm}'}" 
                                FontSize="Micro"
                                TextColor="{Binding ReceivedMessageTimestampTextColor, Source={x:Reference chat}}"
                                IsVisible="{Binding IsReceivedMessageTimestampVisible, Source={x:Reference chat}}"/>

                    </VerticalStackLayout>
                </Frame>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SystemMessageTemplate"
                      x:DataType="models:ChatMessage">

            <Frame HorizontalOptions="Center"
                   CornerRadius="5"
                   Padding="16, 6"
                   BackgroundColor="{Binding SystemMessageBackgroundColor, Source={x:Reference chat}}"
                   Margin="0, 5">

                <Label Text="{Binding TextContent}"
                       TextColor="{Binding SystemMessageTextColor, Source={x:Reference chat}}"/>

            </Frame>
        </DataTemplate>
        
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

        <helpers:ChatMessageTemplateSelector x:Key="ChatMessageTemplateSelector"
                                             SentMessage="{StaticResource SentMessageTemplate}"
                                             ReceivedMessage="{StaticResource ReceivedMessageTemplate}"
                                             SystemMessage="{StaticResource SystemMessageTemplate}"/>
        
    </ContentView.Resources>

    <Grid RowDefinitions="*, Auto, Auto"
          RowSpacing="10">

        <ScrollView Grid.Row="0" x:Name="chatMessagesScrollView"
                    VerticalOptions="End">

            <CollectionView x:Name="chatMessagesCollectionView"
                            ItemsSource="{Binding ChatMessages, Source={x:Reference chat}}"
                            ItemTemplate="{StaticResource ChatMessageTemplateSelector}"/>
        </ScrollView>
        
        <Label Grid.Row="1"
               Text="{Binding Status, Source={x:Reference chat}}"
               IsVisible="{Binding IsStatusVisible, Source={x:Reference chat}}"
               TextColor="{Binding StatusTextColor, Source={x:Reference chat}}"
               Margin="0, -10, 0, -5">
        </Label>

        <Grid Grid.Row="2"
              ColumnDefinitions="*, Auto"
              ColumnSpacing="10">

            <Frame Grid.Column="0"
                   Padding="5, 0, 10, 0"
                   BorderColor="LightGray">

                <Grid ColumnDefinitions="*, Auto, Auto, Auto, Auto" 
                      RowDefinitions="Auto, Auto">

                    <controls:AudioPlayer Grid.ColumnSpan="5" x:Name="audioPlayer"
                                          Grid.Row="0"
                                          AudioService="{Binding AudioService, Source={x:Reference chat}}"
                                          Source="{Binding AudioContent, Source={x:Reference chat}}"
                                          StartStopCommand="{Binding AudioPlayerCommand, Source={x:Reference chat}}"
                                          IsEnabled="{Binding IsHandsFreeModeOn, Source={x:Reference chat}, Converter={x:StaticResource Key=InverseBooleanConverter}}"
                                          Icon="{Binding AudioContentIcon, Source={x:Reference chat}}"
                                          Color="{Binding AudioContentColor, Source={x:Reference chat}}"
                                          HeightRequest="25"
                                          WidthRequest="25"
                                          HorizontalOptions="Start"
                                          Margin="5, 10, 0, 0"/>

                    <Editor Grid.Column="0"
                            Grid.Row="1"
                            Text="{Binding TextContent, Source={x:Reference chat}}"
                            Placeholder="Type your message..."
                            VerticalTextAlignment="Center"
                            Keyboard="Chat"
                            AutoSize="TextChanges"
                            TextColor="{OnPlatform Android=Black, WinUI=White}"/>

                    <ImageButton Grid.Column="1"
                                 Grid.Row="1"
                                 Command="{Binding AudioRecorderCommand, Source={x:Reference chat}}"
                                 IsEnabled="{Binding IsHandsFreeModeOn, Source={x:Reference chat}, Converter={x:StaticResource Key=InverseBooleanConverter}}"
                                 Source="{Binding AudioRecorderIcon, Source={x:Reference chat}}" 
                                 Aspect="AspectFit"
                                 HeightRequest="25"
                                 WidthRequest="25"
                                 IsVisible="{Binding IsAudioRecorderVisible, Source={x:Reference chat}}"
                                 Margin="5, 0, 0, 0">
                        <ImageButton.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding AudioRecorderColor, Source={x:Reference chat}}"/>
                        </ImageButton.Behaviors>
                    </ImageButton>

                    <ImageButton Grid.Column="2"
                                 Grid.Row="1"
                                 Command="{Binding HandsFreeModeCommand, Source={x:Reference chat}}"
                                 Source="{Binding HandsFreeModeIcon, Source={x:Reference chat}}" 
                                 Aspect="AspectFit"
                                 HeightRequest="25"
                                 WidthRequest="25"
                                 IsVisible="{Binding IsHandsFreeModeVisible, Source={x:Reference chat}}"
                                 Margin="5, 0, 0, 0">
                        <ImageButton.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding HandsFreeModeColor, Source={x:Reference chat}}"/>
                        </ImageButton.Behaviors>
                    </ImageButton>

                    <ImageButton Grid.Column="3"
                                 Grid.Row="1"
                                 Command="{Binding AddAttachmentCommand, Source={x:Reference chat}}"
                                 IsEnabled="{Binding IsHandsFreeModeOn, Source={x:Reference chat}, Converter={x:StaticResource Key=InverseBooleanConverter}}"
                                 Source="{Binding AddAttachmentIcon, Source={x:Reference chat}}" 
                                 Aspect="AspectFit"
                                 HeightRequest="25"
                                 WidthRequest="25"
                                 IsVisible="{Binding IsAddAttachmentVisible, Source={x:Reference chat}}"
                                 Margin="5, 0, 0, 0">
                        <ImageButton.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding AddAttachmentColor, Source={x:Reference chat}}"/>
                        </ImageButton.Behaviors>
                    </ImageButton>

                    <ImageButton Grid.Column="4"
                                 Grid.Row="1"
                                 Command="{Binding TakePhotoCommand, Source={x:Reference chat}}"
                                 IsEnabled="{Binding IsHandsFreeModeOn, Source={x:Reference chat}, Converter={x:StaticResource Key=InverseBooleanConverter}}"
                                 Source="{Binding TakePhotoIcon, Source={x:Reference chat}}"
                                 Aspect="AspectFit"
                                 HeightRequest="25"
                                 WidthRequest="25"
                                 IsVisible="{Binding IsTakePhotoVisible, Source={x:Reference chat}}"
                                 Margin="5, 0, 0, 0">
                        <ImageButton.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding TakePhotoColor, Source={x:Reference chat}}"/>
                        </ImageButton.Behaviors>
                    </ImageButton>
                </Grid>
            </Frame>

            <ImageButton Grid.Column="1"
                         Command="{Binding SendMessageCommand, Source={x:Reference chat}}"
                         IsEnabled="{Binding IsSendMessageEnabled, Source={x:Reference chat}}"
                         Source="{Binding SendMessageIcon, Source={x:Reference chat}}"
                         Aspect="AspectFit"
                         HeightRequest="25"
                         WidthRequest="25"
                         VerticalOptions="End"
                         Margin="0, 11"
                         IsVisible="{Binding IsSendMessageVisible, Source={x:Reference chat}}">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{Binding SendMessageColor, Source={x:Reference chat}}"/>
                </ImageButton.Behaviors>
            </ImageButton>
        </Grid>
    </Grid>
</ContentView>
