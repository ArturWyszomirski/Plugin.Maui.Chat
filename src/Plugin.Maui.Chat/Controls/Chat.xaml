<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:behaviors="clr-namespace:Plugin.Maui.Chat.Behaviors"
             xmlns:controls="clr-namespace:Plugin.Maui.Chat.Controls"
             xmlns:helpers="clr-namespace:Plugin.Maui.Chat.Helpers"
             xmlns:models="clr-namespace:Plugin.Maui.Chat.Models"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="Plugin.Maui.Chat.Controls.Chat"
             x:DataType="controls:Chat"
             x:Name="chat">

    <ContentView.Behaviors>
        <behaviors:UserMessageValidationBehavior></behaviors:UserMessageValidationBehavior>
    </ContentView.Behaviors>

    <ContentView.Resources>
        
        <DataTemplate x:Key="SentMessageTemplate" 
                      x:DataType="models:ChatMessage">
            
            <Grid ColumnDefinitions="*, 3*"
                  Margin="0, 0">
                
                <Frame Grid.Column="1"
                       HorizontalOptions="End"
                       CornerRadius="25"
                       Padding="16, 12"
                       BackgroundColor="{Binding SentMessageBackgroundColor, Source={x:Reference chat}}">
                    
                    <VerticalStackLayout>
                        
                        <Label HorizontalOptions="Start"
                               Text="{Binding Author}"
                               TextColor="{Binding SentMessageAuthorTextColor, Source={x:Reference chat}}"
                               FontAttributes="Bold"
                               IsVisible="{Binding IsSentMessageAuthorVisible, Source={x:Reference chat}}"/>
                        
                        <Label Text="{Binding Text}"
                               VerticalOptions="Center"
                               TextColor="{Binding SentMessageContentTextColor, Source={x:Reference chat}}"/>
                        
                        <Label HorizontalOptions="End"
                               Text="{Binding DateTime, StringFormat='{0:HH:mm}'}" 
                               FontSize="Micro"
                               TextColor="{Binding SentMessageTimestampTextColor, Source={x:Reference chat}}"
                               IsVisible="{Binding IsSentMessageTimestampVisible, Source={x:Reference chat}}"/>
                        
                    </VerticalStackLayout>
                </Frame>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="ReceivedMessageTemplate"
                      x:DataType="models:ChatMessage">
            
            <Grid ColumnDefinitions="3*, *"
                  Margin="0, 0">
                
                <Frame Grid.Column="0"
                       HorizontalOptions="Start"
                       CornerRadius="25"
                       Padding="16, 12"
                       BackgroundColor="{Binding ReceivedMessageBackgroundColor, Source={x:Reference chat}}">
                    
                    <VerticalStackLayout>
                        
                        <Label HorizontalOptions="Start"
                               Text="{Binding Author}"
                               TextColor="{Binding ReceivedMessageAuthorTextColor, Source={x:Reference chat}}"
                               FontAttributes="Bold"
                               IsVisible="{Binding IsReceivedMessageAuthorVisible, Source={x:Reference chat}}"/>
                        
                        <Label Text="{Binding Text}"
                               VerticalOptions="Center"
                               TextColor="{Binding ReceivedMessageContentTextColor, Source={x:Reference chat}}"/>
                        
                        <Label HorizontalOptions="End"
                               Text="{Binding DateTime, StringFormat='{0:HH:mm}'}" 
                               FontSize="Micro"
                               TextColor="{Binding ReceivedMessageTimestampTextColor, Source={x:Reference chat}}"
                               IsVisible="{Binding IsReceivedMessageTimestampVisible, Source={x:Reference chat}}"/>
                        
                    </VerticalStackLayout>
                </Frame>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="SystemMessageTemplate"
                      x:DataType="models:ChatMessage">
            
            <Frame HorizontalOptions="Center"
                   CornerRadius="5"
                   Padding="16, 6"
                   BackgroundColor="{Binding SystemMessageBackgroundColor, Source={x:Reference chat}}"
                   Margin="0, 0">
                
                <Label Text="{Binding Text}"
                       TextColor="{Binding SystemMessageTextColor, Source={x:Reference chat}}"/>
            </Frame>
        </DataTemplate>
        
        <helpers:ChatMessageTemplateSelector x:Key="ChatMessageTemplateSelector"
                                             SentMessage="{StaticResource SentMessageTemplate}"
                                             ReceivedMessage="{StaticResource ReceivedMessageTemplate}"
                                             SystemMessage="{StaticResource SystemMessageTemplate}"/>
    </ContentView.Resources>

    
    <!-- UI -->
    <Grid RowDefinitions="*, Auto, Auto"
          RowSpacing="10">
        
        <ScrollView x:Name="chatMessagesScrollView" 
                    Grid.Row="0"
                    VerticalOptions="End">
            
            <CollectionView x:Name="chatMessagesCollectionView"
                            VerticalScrollBarVisibility="Never"
                            ItemsSource="{Binding ChatMessages, Source={x:Reference chat}}"
                            ItemTemplate="{StaticResource ChatMessageTemplateSelector}">
                <CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Vertical" ItemSpacing="{OnPlatform Android=10, iOS=10, Default=10}" />
                </CollectionView.ItemsLayout>
            </CollectionView>
        </ScrollView>
        
        <Label Grid.Row="1"
               Text="{Binding Status, Source={x:Reference chat}}"
               IsVisible="{Binding IsStatusVisible, Source={x:Reference chat}}"
               TextColor="{Binding StatusTextColor, Source={x:Reference chat}}"/>
        
        <Grid Grid.Row="2"
              ColumnDefinitions="*, Auto"
              ColumnSpacing="10">
            
            <Frame Grid.Column="0"
                   Padding="5, 0, 10, 0"
                   BorderColor="LightGray">
                
                <Grid ColumnDefinitions="*, Auto, Auto, Auto, Auto">
                    
                    <Editor Grid.Column="0"
                            Text="{Binding UserMessage, Source={x:Reference chat}}"
                            Placeholder="Type your message..."
                            VerticalTextAlignment="Center"
                            Keyboard="Chat"
                            AutoSize="TextChanges"
                            TextColor="{Binding EditorTextColor, Source={x:Reference chat}}"/>
                    
                    <Image Grid.Column="1"
                           HeightRequest="25"
                           WidthRequest="25"
                           Source="{Binding StartStopRecordToggleIcon, Source={x:Reference chat}}" 
                           Aspect="AspectFit"
                           IsVisible="{Binding IsStartStopRecordToggleVisible, Source={x:Reference chat}}"
                           Margin="5, 0, 0, 0">
                        <Image.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding StartStopRecordToggleColor, Source={x:Reference chat}}"/>
                            <toolkit:ImageTouchBehavior Command="{Binding StartStopRecordToggleCommand, Source={x:Reference chat}}"/>
                        </Image.Behaviors>
                    </Image>
                    
                    <Image Grid.Column="2"
                           HeightRequest="25"
                           WidthRequest="25"
                           Source="{Binding HandsFreeModeToggleIcon, Source={x:Reference chat}}" 
                           Aspect="AspectFit"
                           IsVisible="{Binding IsHandsFreeModeToggleVisible, Source={x:Reference chat}}"
                           Margin="5, 0, 0, 0">
                        <Image.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding HandsFreeModeToggleColor, Source={x:Reference chat}}"/>
                            <toolkit:ImageTouchBehavior Command="{Binding HandsFreeModeToggleCommand, Source={x:Reference chat}}"/>
                        </Image.Behaviors>
                    </Image>
                    
                    <Image Grid.Column="3"
                           HeightRequest="25"
                           WidthRequest="25"
                           Source="{Binding AddAttachmentIcon, Source={x:Reference chat}}" 
                           Aspect="AspectFit"
                           IsVisible="{Binding IsAddAttachmentVisible, Source={x:Reference chat}}"
                           Margin="5, 0, 0, 0">
                        <Image.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding AddAttachmentColor, Source={x:Reference chat}}"/>
                            <toolkit:ImageTouchBehavior Command="{Binding AddAttachmentCommand, Source={x:Reference chat}}"/>
                        </Image.Behaviors>
                    </Image>
                    
                    <Image Grid.Column="4"
                           HeightRequest="25"
                           WidthRequest="25"
                           Source="{Binding TakePhotoIcon, Source={x:Reference chat}}" 
                           Aspect="AspectFit"
                           IsVisible="{Binding IsTakePhotoVisible, Source={x:Reference chat}}"
                           Margin="5, 0, 0, 0">
                        <Image.Behaviors>
                            <toolkit:IconTintColorBehavior TintColor="{Binding TakePhotoColor, Source={x:Reference chat}}"/>
                            <toolkit:ImageTouchBehavior Command="{Binding TakePhotoCommand, Source={x:Reference chat}}"/>
                        </Image.Behaviors>
                    </Image>
                </Grid>
            </Frame>
            
            <ImageButton Grid.Column="1"
                   Command="{Binding SendMessageCommand, Source={x:Reference chat}}"
                         HeightRequest="25"
                         WidthRequest="25"
                   Padding="{OnPlatform iOS=5, Default=0}"
                         Source="{Binding SendMessageIcon, Source={x:Reference chat}}"
                   Aspect="{OnPlatform iOS=Fill, Default=AspectFit}"
                   IsEnabled="{Binding IsSendMessageEnabled, Source={x:Reference chat}}"
                         IsVisible="{Binding IsSendMessageVisible, Source={x:Reference chat}}">
                <ImageButton.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{Binding SendMessageColor, Source={x:Reference chat}}"/>
                </ImageButton.Behaviors>
            </ImageButton>
        </Grid>
    </Grid>
</ContentView>
